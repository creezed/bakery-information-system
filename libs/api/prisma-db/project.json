{
  "name": "prisma-db",
  "$schema": "../../../node_modules/nx/schemas/project-schema.json",
  "sourceRoot": "libs/api/prisma-db/src",
  "projectType": "library",
  "tags": [],
  "targets": {
    "test": {
      "executor": "@nx/jest:jest",
      "outputs": ["{workspaceRoot}/coverage/{projectRoot}"],
      "options": {
        "jestConfig": "libs/api/prisma-db/jest.config.ts"
      }
    },
    "db:prisma:generate": {
      "executor": "nx:run-commands",
      "outputs": ["{workspaceRoot}/prisma/generated-prisma-client"],
      "options": {
        "commands": ["prisma generate --schema ./src/schema.prisma"],
        "cwd": "libs/api/prisma-db",
        "parallel": true
      }
    },
    "db:prisma:studio": {
      "executor": "nx:run-commands",
      "options": {
        "command": "prisma studio --schema ./src/schema.prisma",
        "cwd": "libs/api/prisma-db"
      }
    },
    "db:prisma:format": {
      "executor": "nx:run-commands",
      "options": {
        "command": "prisma format --schema ./src/schema.prisma",
        "cwd": "libs/api/prisma-db"
      }
    },
    "db:migrate:dev": {
      "executor": "nx:run-commands",
      "options": {
        "command": "prisma migrate dev --schema ./src/schema.prisma --name $([[ {args.name} = undefined ]] && echo migration || echo {args.name})",
        "cwd": "libs/api/prisma-db"
      }
    },
    "db:migrate:deploy": {
      "executor": "nx:run-commands",
      "options": {
        "command": "prisma migrate deploy --schema ./src/schema.prisma",
        "cwd": "libs/api/prisma-db"
      }
    },
    "db:migrate:rollback": {
      "executor": "nx:run-commands",
      "options": {
        "command": "prisma migrate resolve --rolled-back --schema ./src/schema.prisma",
        "cwd": "libs/api/prisma-db"
      }
    },
    "db:clean": {
      "executor": "nx:run-commands",
      "options": {
        "command": "prisma migrate reset --force --schema ./src/schema.prisma",
        "cwd": "libs/api/prisma-db"
      }
    }
  }
}
